//Rotate Array

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        int size = nums.size();
        while(k > size){ //rotate > size
            k = k - size; // rotate = rotate - size
            cout << "TEST" << endl;
        }
        //cout << "rotate: " << rotate << endl;
        
        if(size == k){
            return;
        }
        if(nums.size() == 1){
            return;
        }
        
        vector<int> tempVec = nums;
            //for(int i=0; i < tempVec.size(); i++)
            //std::cout << tempVec.at(i) << ' ';
        
        if(size == nums.size()){
            //cout << "no subtraction was needed" << endl;
            int newIndex = k;
            //cout << "nums.size: " << nums.size() << endl;
            for(int x = 0; x < nums.size(); ++x){
                //cout << "TEST" <<endl;
                 //for(int i=0; i < nums.size(); i++)
                   //std::cout << nums.at(i) << ' ';
                
                if(newIndex == nums.size()){ // only occurs once
                    newIndex = 0;
                    nums.at(newIndex) = tempVec.at(x);
                    ++newIndex;
                } else {
                    nums.at(newIndex) = tempVec.at(x);
                    ++newIndex;
                }
            }             
        }
        else{
            //cout << "no subtraction was needed" << endl;
            int newIndex = size;
            //cout << "nums.size: " << nums.size() << endl;
            for(int x = 0; x < nums.size(); ++x){
                //cout << "TEST" <<endl;
                 //for(int i=0; i < nums.size(); i++)
                   //std::cout << nums.at(i) << ' ';
                
                if(newIndex == nums.size()){ // only occurs once
                    newIndex = 0;
                    nums.at(newIndex) = tempVec.at(x);
                    ++newIndex;
                } else {
                    nums.at(newIndex) = tempVec.at(x);
                    ++newIndex;
                }
            }     
        }
        
        
    }
};